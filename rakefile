require 'fileutils'
require 'rake/clean'

require_relative 'rake/libs'
require_relative 'rake/base'
require_relative 'rake/tools'
require_relative 'rake/ndbl'
require_relative 'rake/_cmake'

CLEAN.include [OBJ_DIR, DEP_DIR] # intermediate files
CLOBBER.include [BUILD_DIR] # final files

task :default => :help

desc "says hello"
task :help do
    print("Welcome to Nodable's rakefile.\nFor more info, run: rake --tasks\n")
end

task :install => [
    'update_system',
    # compile system libraries (we should replace this by binaries or ubuntu packages)
    'nfd:install',
    'cpptrace:install'
];
task :build => ['libs:build', 'tools:build', 'ndbl:build'] do puts "Build DONE" end
task :test  => ['tools:test', 'ndbl:test']
task :run   => ['ndbl:app:run']

task :update_system do
    if not BUILD_OS_LINUX
        raise "Your system (#{BUILD_OS}) is not supported by this script"
    end

    packages = [
        "build-essential",
        "libstdc++-11-dev",
        "libegl1-mesa-dev",
        "libdbus-1-dev",
        "libgtk-3-dev",
        "libfreetype-dev",
        "libsdl2-dev",
        "libgtest-dev",
    ].join(" ")

    sh "sudo apt-get update && sudo apt-get install #{packages}"

    if PLATFORM_WEB
        # Download and install the latest SDK tools.
        sh "libs/emsdk/emsdk install latest"

        # Make the "latest" SDK "active" for the current user. (writes .emscripten file)
        sh "libs/emsdk/emsdk activate latest"
    end
end

namespace :nfd do
    nfd = CMakeTarget.new(name: "nfd", path: "libs/nativefiledialog-extended" )
    tasks_for_cmake_target( nfd )
end

namespace :cpptrace do
   cpptrace = CMakeTarget.new(name: "cpptrace", path: "libs/cpptrace" )
   tasks_for_cmake_target( cpptrace )
end

